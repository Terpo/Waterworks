buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mc_version}-${mod_version}"
group= "${mod_group}"
archivesBaseName = "${mod_id}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: "${mcp_mapping}"

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                waterworks {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                waterworks {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'waterworks', '--all', '--output', file('src/generated/resources/')
            mods {
                waterworks {
                    source sourceSets.main
                }
            }
        }	 
    }
}

repositories {
    maven {
		name 'JEI mezz maven'
		url = "https://dvs1.progwml6.com/files/maven/"
	}
    maven {
		name 'Hwyla mcp maven'
		url = "https://tehnut.info/maven/" 
	}
	//maven { // TOP mcjty/
    //    name 'tterrag maven'
    //    url "https://maven.tterrag.com/"
    //}
    maven { // Patchouli
    	url 'https://maven.blamejared.com' 
    }
    
    //maven {
    //    name = "CoFH Maven"
    //    url = "https://maven.covers1624.net/"
    //}
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
	
	//compile fg.deobf(project.dependencies.create("mcjty.theoneprobe:TheOneProbe-${top_version}") {
    //        transitive = false
    //})
	
	compile fg.deobf(project.dependencies.create("mcp.mobius.waila:Hwyla:${hwyla_version}") {
       transitive = false
    })
		
    compile fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}") {
        transitive = false
    }
	compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
	runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "${mod_name}",
            "Specification-Vendor": "${mod_author}",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"${mod_author}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}